services:
  traefik:
    # The official v3 Traefik docker image
    image: traefik:v3.1

    # Set traefik resource
    cpus: 2

    # Name
    container_name: traefik

    # Restart policy
    restart: unless-stopped

    # Enables the web UI and tells Traefik to listen to docker
    command:
      # Debug log level
      - '--log.level=DEBUG'

      # Enable the Secured Web UI
      - '--api.insecure=true'
      - '--api.dashboard=true'

      # Skip self signed SSL certificates
      - '--serverstransport.insecureskipverify=true'

      # Enable Docker as a provider and disable exposed by default
      - '--providers.docker=true'
      - '--providers.docker.exposedbydefault=false'

      # Enable File as a provider and watch the changes
      - '--providers.file.watch=true'
      - '--providers.file.directory=/config'

      # Setup entrypoints for HTTP and HTTPS and always redirect HTTP to HTTPS
      - '--entrypoints.web.address=:80'
      - '--entrypoints.web.http.redirections.entrypoint.to=websecure'
      - '--entrypoints.web.http.redirections.entrypoint.scheme=https'
      - '--entrypoints.websecure.address=:443'
      - '--entrypoints.websecure.asdefault=true'
      - '--entrypoints.websecure.forwardedheaders.trustedips=${CLOUDFLARE_IPS}'

      # Setup Domain and DNS challenge for Let's Encrypt
      - '--entrypoints.websecure.http.tls=true'
      - '--entrypoints.websecure.http.tls.certresolver=letsencrypt'
      - '--entrypoints.websecure.http.tls.domains[0].main=${PRIMARY_MAIN_DOMAIN}'
      - '--entrypoints.websecure.http.tls.domains[0].sans=${PRIMARY_WILDCARD_DOMAIN}'
      - '--entrypoints.websecure.http.tls.domains[1].main=${SECONDARY_MAIN_DOMAIN}'
      - '--entrypoints.websecure.http.tls.domains[1].sans=${SECONDARY_WILDCARD_DOMAIN}'

      # Setup Let's Encrypt certificates resolver
      - '--certificatesresolvers.letsencrypt.acme.email=${CLOUDFLARE_EMAIL}'
      - '--certificatesresolvers.letsencrypt.acme.storage=/letsencrypt/acme.json'
      - '--certificatesresolvers.letsencrypt.acme.dnschallenge=true'
      - '--certificatesresolvers.letsencrypt.acme.dnschallenge.provider=cloudflare'
      - '--certificatesresolvers.letsencrypt.acme.dnschallenge.resolvers=1.1.1.1:53,8.8.8.8:53'
      - '--certificatesresolvers.letsencrypt.acme.dnschallenge.delaybeforecheck=60'

      # Experimental Plugins
      - '--experimental.plugins.themepark.modulename=github.com/packruler/traefik-themepark'
      - '--experimental.plugins.themepark.version=v1.4.2'

    ports:
      # The HTTP port
      - '80:80'
      # The HTTPS port
      - '443:443'
      # The Web UI (enabled by --api.insecure=true)
      - '8010:8080'

    extra_hosts:
      - 'host.docker.internal:host-gateway'

    volumes:
      # So that Traefik can listen to the Docker events
      - '/var/run/docker.sock:/var/run/docker.sock'
      - './letsencrypt:/letsencrypt'
      - '.${CUSTOM_CONFIG_DIR:-/config}:/config'

    secrets:
      - 'cloudflare_token'

    environment:
      - 'AUTH_USERS=${AUTH_USERS}'
      - 'ALLOWED_PUBLIC_IPS=${ALLOWED_PUBLIC_IPS}'
      - 'ALLOWED_INTERNAL_IPS=${ALLOWED_INTERNAL_IPS}'
      - 'CLOUDFLARE_IPS=${CLOUDFLARE_IPS}'
      - 'MAIN_VPS_IP=${MAIN_VPS_IP}'
      - 'DNS_VPS_IP=${DNS_VPS_IP}'
      - 'PROXY_VPS_IP=${PROXY_VPS_IP}'
      - 'PRIMARY_MAIN_DOMAIN=${PRIMARY_MAIN_DOMAIN}'
      - 'SECONDARY_MAIN_DOMAIN=${SECONDARY_MAIN_DOMAIN}'
      - 'WS_PROXY_ROUTER=${WS_PROXY_ROUTER}'
      - 'CF_DNS_API_TOKEN_FILE=/run/secrets/cloudflare_token'

    labels:
      - 'traefik.enable=${TRAEFIK_ENABLED:-false}'
      - 'traefik.http.routers.traefik.rule=Host(`traefik.${SECONDARY_MAIN_DOMAIN}`)'
      - 'traefik.http.routers.traefik.service=api@internal'
      - 'traefik.http.routers.traefik.middlewares=internal-ip-allowlist@file,basic-auth@file'

secrets:
  cloudflare_token:
    file: './secrets/cloudflare_token'

networks:
  default:
    name: traefik
